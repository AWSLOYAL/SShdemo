pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Prepare Node App') {
            steps {
                sh '''
                mkdir -p app
                cd app

                # Create package.json
                cat > package.json <<'EOF'
                {
                  "name": "my-node-app",
                  "version": "1.0.0",
                  "main": "app.js",
                  "scripts": {
                    "start": "node app.js"
                  },
                  "dependencies": {}
                }
                EOF

                # Create app.js
                cat > app.js <<'EOF'
                const http = require('http');
                const server = http.createServer((req, res) => {
                  res.end('✅ Hello from Node.js inside Docker!');
                });
                server.listen(3000, () => console.log('🚀 Server running on port 3000'));
                EOF
                '''
            }
        }

        stage('Create Compose File') {
            steps {
                sh '''#!/bin/bash
                mkdir -p frappe_docker
                cat > frappe_docker/pwd.yml <<'EOF'
version: '3.8'

services:
  app:
    image: node:18-alpine
    container_name: my-node-app
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app
    command: sh -c "npm install && node app.js"
EOF
                '''
            }
        }

        stage('Validate Compose File') {
            steps {
                sh 'docker-compose -f frappe_docker/pwd.yml config'
            }
        }

        stage('Deploy (docker-compose up)') {
            steps {
                sh 'docker-compose -f frappe_docker/pwd.yml up -d'
            }
        }
    }

    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Deploy pipeline failed.'
            sh 'docker-compose -f ${Jenkinsfile.deploy} down || true'
        }
    }
}
