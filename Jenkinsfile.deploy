pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Prepare Node App') {
            steps {
                sh '''
                mkdir -p app
                cat > app/package.json <<'EOF'
{
  "name": "my-node-app",
  "version": "1.0.0",
  "main": "app.js",
  "scripts": {
    "start": "node app.js"
  },
  "dependencies": {}
}
EOF

                cat > app/app.js <<'EOF'
const http = require('http');
const server = http.createServer((req, res) => {
    res.end('‚úÖ Hello from Node.js inside Docker!');
});
server.listen(3000, () => console.log('üöÄ Server running on port 3000'));
EOF
                '''
            }
        }

        stage('Build and Deploy') {
            steps {
                sh '''
                docker-compose -f frappe_docker/docker-compose.yml down || true
                docker-compose -f frappe_docker/docker-compose.yml up -d --build
                '''
            }
        }

        stage('Test App Output') {
            steps {
                sh 'sleep 5 && curl http://localhost:3000'
            }
        }
    }

    post {
        failure {
            echo '‚ùå Deploy pipeline failed.'
        }
    }
}
